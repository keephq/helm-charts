namespace: default
serviceAccount:
  create: true
  annotations: {}
  name: ""
nameOverride: ""
fullnameOverride: ""

backend:
  enabled: true
  env:
    - name: SECRET_MANAGER_TYPE
      value: k8s
    - name: PORT
      value: "8080"
    - name: SECRET_MANAGER_DIRECTORY
      value: /state
    - name: DATABASE_CONNECTION_STRING
      value: mysql+pymysql://root@keep-database:3306/keep
    - name: PUSHER_APP_ID
      value: 1
    - name: PUSHER_APP_KEY
      value: keepappkey
    - name: PUSHER_APP_SECRET
      value: keepappsecret
    - name: PUSHER_HOST
      value: keep-websocket
    - name: PUSHER_PORT
      value: 6001
  openAiApi:
    enabled: false
    openAiApiKey: ""
  replicaCount: 1
  image:
    repository: us-central1-docker.pkg.dev/keephq/keep/keep-api
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 8080
  ingress:
    enabled: true
    className: ""
    annotations: {}
    hosts:
      - host: chart-example-backend.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
  route:
    enabled: false
    host: chart-example-backend.local
    path: /
    tls: []
    wildcardPolicy: None
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

frontend:
  enabled: true
  env:
    - name: NEXTAUTH_SECRET
      value: secret
    - name: NEXTAUTH_URL
      value: http://localhost:3000
    - name: API_URL
      value: http://keep-backend:8080
    - name: NEXT_PUBLIC_API_URL
      value: ""
    - name: NEXT_PUBLIC_POSTHOG_KEY
      value: "phc_muk9qE3TfZsX3SZ9XxX52kCGJBclrjhkP9JxAQcm1PZ"
    - name: NEXT_PUBLIC_POSTHOG_HOST
      value: https://app.posthog.com
    - name: ENV
      value: development
    - name: NODE_ENV
      value: development
    - name: HOSTNAME
      value: 0.0.0.0
    - name: PUSHER_HOST
      value: keep-websocket.default.svc.cluster.local
    - name: PUSHER_PORT
      value: 6001
    - name: PUSHER_APP_KEY
      value: "keepappkey"
  replicaCount: 1
  image:
    repository: us-central1-docker.pkg.dev/keephq/keep/keep-ui
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 3000
  ingress:
    enabled: true
    className: ""
    annotations: {}
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
  route:
    enabled: false
    host: chart-example.local
    path: /
    tls: []
    wildcardPolicy: None
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

websocket:
  enabled: true
  env:
    - name: SOKETI_USER_AUTHENTICATION_TIMEOUT
      value: 3000
    - name: SOKETI_DEFAULT_APP_ID
      value: 1
    - name: SOKETI_DEFAULT_APP_KEY
      value: keepappkey
    - name: SOKETI_DEFAULT_APP_SECRET
      value: keepappsecret
  replicaCount: 1
  image:
    repository: quay.io/soketi/soketi:1.4-16-debian
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 6001
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

database:
  enabled: true
  replicaCount: 1
  size: 5Gi
  storageClass: ""
  image:
    repository: mysql
    pullPolicy: IfNotPresent
    tag: "latest"
  env:
    - name: MYSQL_ALLOW_EMPTY_PASSWORD
      value: yes
    - name: MYSQL_DATABASE
      value: keep
    - name: MYSQL_PASSWORD
      value: null
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 3306
  resources: {}
  autoscaling:
    enabled: false
  nodeSelector: {}
  tolerations: []
  affinity: {}
